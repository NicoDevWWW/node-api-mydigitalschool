const router = require('express').Router()
var notes = [
	{
		id: '1',
		title: 'Ma note',
		description: 'Ma description',
		isEnabled: true,
		IsFavorite: false
	},{
		id: '2',
		title: 'Ma note 2',
		description: 'Ma description 2',
		isEnabled: true,
		IsFavorite: false
	},
	{
		id: '3',
		title: 'Ma note 3',
		description: 'Ma description 3',
		isEnabled: true,
		IsFavorite: false
	},
	{
		id: '4',
		title: 'Ma note 4',
		description: 'Ma description 4',
		isEnabled: true,
		IsFavorite: false
	},



]

//récupérer une note
router.route('/')
	.get((req, res) =>{
		res.send(notes)
	})
	.post((req, res) =>{
		console.log('body', req.body)
		const title = req.body.title
		const description = req.body.description

		if (!title){
			res.status(500).send('Le titre est manquant')
		}else if(!description){
			res.status(500).send('La description est manquante')
		}else{
			notes.push({
				id: Math.random().toString(36).substr(2, 9),
				title: title,
				description: description,
				isEnabled: true,
				IsFavorite: false
			})
			res.send(notes)
		}
	})
	.delete((req, res) => { // Suppression d'un élément par son ID
		// On récupère l'ID de la note à supprimer
		const id = req.body.id

		if (!id) {
			res.status(500).send('L\'id est manquant')
		} else {
			// On recherche dans le tableau l'index de l'objet possédant l'id envoyé en paramètre
			// var removeIndex = notes.map(
			// 	function(item) {
			// 		return item.id;
			// 	}).indexOf(id);
			// res.send(notes.splice(removeIndex, 1))
			// remove object
			var index = notes.findIndex(note => {
				return note.id === id
			})

			// Si la note est trouvée
			if (index !== -1) {
				// On supprime la note du tableau
				notes.splice(index, 1)

				// On renvoit la liste mise à jour
				res.send(notes)
			} else {
				res.status(500).send('Impossible de trouver la note ayant pour ID ' + id)
			}
		}
	})
	.put((req, res) => { // Mise à jour d'un élément par son ID
		// On récupère l'ID de la note à mettre à jour
		const id = req.body.id

		if (!id) {
			res.status(500).send('L\'id est manquant')
		} else {
			// On recherche dans le tableau l'index de l'objet possédant l'id envoyé en paramètre
			var index = notes.findIndex(o => {
				return o.id === id
			})

			// Si la note est trouvée
			if (index !== -1) {
				// On récupère les informations de la requête
				const title = req.body.title
				const description = req.body.description

				notes[index].title = title || notes[index].title
				notes[index].description = description || notes[index].description
				// On renvoit la liste mise à jour
				res.send(notes)

			} else {
				res.status(500).send('Impossible de trouver la note ayant pour ID ' + id)
			}
		}
	})


module.exports = router
